/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.edusys.ui;

import com.edusys.dao.KhachHangDAO;
import com.edusys.entity.KhachHang;
import com.edusys.untis.Auth;
import com.edusys.untis.EmailValidator;
import com.edusys.untis.MsgBox;
import com.edusys.untis.XDate;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author tankh
 */
public class KhachHangForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form Maun
     */
    public KhachHangForm() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        init();

        this.customizeButton(btnExcel);
        this.customizeButton(btnMoi);
        this.customizeButton(btnSua);
        this.customizeButton(btnThem);
        this.customizeButton(btnXoa);

        customizeTextField(txtMaNV, new Color(255, 255, 255));
        customizeTextField(txtDiaChi, new Color(255, 255, 255));
        customizeTextField(txtEmail, new Color(255, 255, 255));
        customizeTextField(txtMaKH, new Color(255, 255, 255));
        customizeTextField(txtTenKH, new Color(255, 255, 255));
        customizeTextField(txtTim, new Color(255, 255, 255));
        txtTim.setSize(64, 28);
        txtMaNV.setBackground(Color.gray);
        customizeComboBox(cboSapXep, new Color(63, 81, 181));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboSapXep = new javax.swing.JComboBox<>();
        txtTim = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        btnExcel = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        dcsNgaySinh = new com.toedter.calendar.JDateChooser();
        txtEmail = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(700, 510));

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(159, 165, 213));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel2.setText("Search by:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quản lý khách hàng");

        cboSapXep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lọc", "Giới tính", "Mã nhân viên", "Đã  xóa" }));
        cboSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSapXepActionPerformed(evt);
            }
        });

        txtTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cboSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTim)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(cboSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(1, 72, 114));
        jLabel9.setText("Mã khách hàng");

        txtMaKH.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        txtMaKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(203, 186, 241)));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(1, 72, 114));
        jLabel5.setText("Tên khách hàng");

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(1, 72, 114));
        jLabel10.setText("Ngày sinh ");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(1, 72, 114));
        jLabel11.setText("Email");

        txtTenKH.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        txtTenKH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(203, 186, 241)));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 5, 3));

        btnThem.setBackground(new java.awt.Color(203, 186, 241));
        btnThem.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Graphicloads-100-Flat-Addition.24.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel5.add(btnThem);

        btnSua.setBackground(new java.awt.Color(203, 186, 241));
        btnSua.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Graphicloads-100-Flat-Pencil.24.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel5.add(btnSua);

        btnXoa.setBackground(new java.awt.Color(203, 186, 241));
        btnXoa.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Graphicloads-100-Flat-Recyclebin.24.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel5.add(btnXoa);

        btnMoi.setBackground(new java.awt.Color(203, 186, 241));
        btnMoi.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Graphicloads-100-Flat-New.24.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        jPanel5.add(btnMoi);

        tblKhachHang.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KH", "Tên KH", "Giới tính", "Ngày sinh", "Email", "Địa chỉ", "Mã NV"
            }
        ));
        tblKhachHang.setFocusable(false);
        tblKhachHang.setGridColor(new java.awt.Color(204, 204, 255));
        tblKhachHang.setRowHeight(25);
        tblKhachHang.setSelectionBackground(new java.awt.Color(255, 51, 102));
        tblKhachHang.getTableHeader().setReorderingAllowed(false);
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKhachHang);

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(1, 72, 114));
        jLabel12.setText("Địa chỉ");

        txtDiaChi.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        txtDiaChi.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(203, 186, 241)));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(1, 72, 114));
        jLabel4.setText("Giới tính");

        rdoNam.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        rdoNam.setText("Nam");

        rdoNu.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        rdoNu.setText("Nữ");

        btnExcel.setBackground(new java.awt.Color(255, 145, 144));
        btnExcel.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Graphicloads-100-Flat-Download-2.24.png"))); // NOI18N
        btnExcel.setText("Xuất file excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(1, 72, 114));
        jLabel13.setText("Mã NV");

        txtMaNV.setEditable(false);
        txtMaNV.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        txtMaNV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(203, 186, 241)));

        dcsNgaySinh.setBackground(new java.awt.Color(255, 255, 255));
        dcsNgaySinh.setDateFormatString("yyyy-MM-dd");

        txtEmail.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(203, 186, 241)));

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(194, 194, 194))
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtDiaChi)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel1Layout.createSequentialGroup()
                                                .addComponent(rdoNam)
                                                .addGap(5, 5, 5)
                                                .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMaKH, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addGap(186, 186, 186))
                                            .addComponent(txtMaNV))
                                        .addGap(8, 8, 8)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dcsNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnExcel)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)))))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(27, 27, 27))
                            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdoNam)
                                .addComponent(rdoNu)))
                        .addComponent(jLabel10)
                        .addGap(3, 3, 3)
                        .addComponent(dcsNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(2, 2, 2)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(2, 2, 2)
                        .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcel)
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        
        if(txtMaKH.getText().length() > 9){
            MsgBox.alert(this, "Ma khach hang phai nho hon 9 ky tu");
            return;
        }
        try {
            Date ngaySinh = dcsNgaySinh.getDate();
            XDate.toString(ngaySinh, "dd-MM-yyy");
        } catch (Exception e) {
            MsgBox.alert(this, "Ngay sinh khong hop le");
            return;
        }
        String ngaySinh = XDate.toString(dcsNgaySinh.getDate(), "dd:MM:yyyy").substring(6);
        if(Integer.parseInt(ngaySinh) > 2004){
            MsgBox.alert(this, "Chua du tuoi");
            return;
        }
        
        if(Integer.parseInt(ngaySinh) < 1950){
            MsgBox.alert(this, "Ngay sinh khong hop le");
            return;
        }

        if (this.isValided()) {

            EmailValidator ev = new EmailValidator();

            if (!ev.validate(txtEmail.getText().trim())) {
                MsgBox.alert(this, "Email không hợp lệ");
            } else {

                this.insert();
            }
        } else {
            MsgBox.alert(this, "Vui lòng điền đầy đủ dữ liệu");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if(txtMaKH.getText().length() > 9){
            MsgBox.alert(this, "Ma khach hang phai nho hon 9 ky tu");
            return;
        }
        try {
            Date ngaySinh = dcsNgaySinh.getDate();
            XDate.toString(ngaySinh, "dd-MM-yyy");
        } catch (Exception e) {
            MsgBox.alert(this, "Ngay sinh khong hop le");
            return;
        }
        String ngaySinh = XDate.toString(dcsNgaySinh.getDate(), "dd:MM:yyyy").substring(6);
        if(Integer.parseInt(ngaySinh) > 2004){
            MsgBox.alert(this, "Chua du tuoi");
            return;
        }
        
        if(Integer.parseInt(ngaySinh) < 1950){
            MsgBox.alert(this, "Ngay sinh khong hop le");
            return;
        }
        
        if (this.isValided()) {
            EmailValidator ev = new EmailValidator();

            if (!ev.validate(txtEmail.getText().trim())) {
                MsgBox.alert(this, "Email không hợp lệ");
            } else {
                this.update();
            }
        } else {
            MsgBox.alert(this, "Vui lòng điền đầy đủ dữ liệu");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        // TODO add your handling code here:        
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        // TODO add your handling code here:
        //if(evt.getClickCount() == 2){
        this.row = tblKhachHang.getSelectedRow();
        this.edit();
        //}
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void txtTimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKeyReleased
        // TODO add your handling code here:
        this.timKiem();
    }//GEN-LAST:event_txtTimKeyReleased

    private void cboSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSapXepActionPerformed
        // TODO add your handling code here:
        switch (cboSapXep.getSelectedIndex()) {
            case 1 -> {
                this.sapXepTheoGioiTinh();
                this.clearForm();
                this.row = -1;
                updateStatus();
            }
            case 2 -> {
                this.sapXepTheoMaNV();
                this.clearForm();
                this.row = -1;
                updateStatus();
            }
            case 3 ->{
                this.sapXepTheoDaXoa();
                this.clearForm();
                this.row = -1;
                btnMoi.setEnabled(false);
                btnSua.setEnabled(false);
                btnThem.setEnabled(false);
                btnXoa.setEnabled(false);
                
            }
            default -> {
                this.fillTable();
                this.clearForm();
                this.row = -1;
                updateStatus();
            }
        }
    }//GEN-LAST:event_cboSapXepActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        // TODO add your handling code here:
        List<KhachHang> list = dao.selectAll();
        try {
            XSSFWorkbook wb = new XSSFWorkbook();
            XSSFSheet sheet = wb.createSheet("KhachHang");
            XSSFRow row = null;
            Cell cell = null;
            row = sheet.createRow(4);

            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("MaKH");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("HoVaTen");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("GioiTinh");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("NgaySinh");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Email");

            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("DiaChi");

            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("MaNV");

            for (int i = 0; i < list.size(); i++) {
                row = sheet.createRow(5 + i);

                cell = row.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(list.get(i).getMaKH());

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(list.get(i).getTenKH());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(list.get(i).isGioiTinh() ? "Nam" : "Nu");

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(XDate.toString(list.get(i).getNgaySinh(), "yyyy-MM-dd"));

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(list.get(i).getEmail());

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(list.get(i).getDiaChi());

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(list.get(i).getMaNV());

            }
            JFileChooser jfc = new JFileChooser();
            String defaultFileName = "KhachHang.xlsx"; // Tên file mặc định
            jfc.setSelectedFile(new File(defaultFileName));
            int rs = jfc.showSaveDialog(null);

            if (rs == JFileChooser.APPROVE_OPTION) {
                // Lấy đường dẫn đã chọn
                File selectedFile = jfc.getSelectedFile();

                // Lấy đường dẫn tuyệt đối
                String selectedFilePath = selectedFile.getAbsolutePath();

                System.out.println("Đường dẫn đã chọn: " + selectedFilePath);

                File file = new File(selectedFilePath);

                try {
                    FileOutputStream fos = new FileOutputStream(file);
                    wb.write(fos);
                    fos.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                MsgBox.alert(this, "Lưu thành công ");
            } else {
                // Người dùng đã hủy hoặc đóng cửa sổ dialog
                System.out.println("Hủy hoclặc đóng dialog");
            }

        } catch (HeadlessException e) {
            MsgBox.alert(this, "Lỗi ");
        }
    }//GEN-LAST:event_btnExcelActionPerformed
    private void init() {

        tblKhachHang.getTableHeader().setDefaultRenderer(new HeaderColor());
        /*for (int i = 0; i < 2; i++) {
            tabs.setBackgroundAt(i, Color.DARK_GRAY);
            tabs.getComponentAt(i).setBackground(Color.DARK_GRAY);
            }*/
        this.fillTable();
        //this.row = 0;
        //tblKhachHang.setRowSelectionInterval(this.row, this.row);
        this.updateStatus();
        txtMaNV.setText(Auth.user.getMaNV());
        rdoNam.setSelected(true);
        //this.edit();
    }

    //disign table
    public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused, int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);
            setFont(new Font("Segoe UI", Font.BOLD, 12));
            setBackground(new java.awt.Color(32, 136, 203));
            setForeground(new Color(255, 255, 255));
            //you can change the color that u want 
            return this;
        }
    }

    private void timKiem() {
        this.fillTable();
        this.clearForm();
        this.row = -1;
        updateStatus();
    }
    KhachHangDAO dao = new KhachHangDAO();
    int row = -1;

    // do data len table
    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);

        try {
            String keyWord = txtTim.getText();
            List<KhachHang> list = dao.selectByKeyword(keyWord);
            //replaceAll(".", "*")
            for (KhachHang kh : list) {
                model.addRow(new Object[]{kh.getMaKH(), kh.getTenKH(), kh.isGioiTinh() ? "Nam" : "Nu",
                    XDate.toString(XDate.addDays(kh.getNgaySinh(), 2), "yyyy-MM-dd"),
                    kh.getEmail(), kh.getDiaChi(), kh.getMaNV()});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    void sapXepTheoGioiTinh() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);

        try {
            String keyWord = txtTim.getText();
            List<KhachHang> list = dao.selectByKeyword(keyWord);

            // Sắp xếp theo giới tính
            Collections.sort(list, (KhachHang nv1, KhachHang nv2) -> Boolean.compare(nv1.isGioiTinh(), nv2.isGioiTinh()) // So sánh theo giới tính
            );
            //replaceAll(".", "*")
            for (KhachHang kh : list) {
                model.addRow(new Object[]{kh.getMaKH(), kh.getTenKH(), kh.isGioiTinh() ? "Nam" : "Nu",
                    XDate.toString(kh.getNgaySinh(), "yyyy-MM-dd"), kh.getEmail(), kh.getDiaChi(), kh.getMaNV()});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private static void customizeComboBox(JComboBox comboBox, Color backgroundColor) {
        comboBox.setPreferredSize(new Dimension(79, 26));
        comboBox.setBackground(backgroundColor);
        comboBox.setForeground(Color.WHITE);

        // Tạo và áp dụng border cho JComboBox
        //Border customBorder = new LineBorder(Color.BLACK, 1, true); // Tạo border tùy chỉnh
        //comboBox.setBorder(customBorder);
        comboBox.setFont(new Font("Arial", Font.PLAIN, 14));

        // Hiệu ứng focus
        comboBox.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                //comboBox.setBorder(new LineBorder(Color.BLUE)); // Đổi màu border khi focus
            }

            @Override
            public void focusLost(FocusEvent e) {
                //comboBox.setBorder(customBorder); // Trở lại màu border ban đầu khi không focus
            }
        });
    }

    void sapXepTheoMaNV() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);

        try {
            String keyWord = txtTim.getText();
            List<KhachHang> list = dao.selectByKeyword(keyWord);

            Collections.sort(list, (KhachHang nv1, KhachHang nv2) -> nv1.getMaNV().compareTo(nv2.getMaNV()));

            //replaceAll(".", "*")
            for (KhachHang kh : list) {
                model.addRow(new Object[]{kh.getMaKH(), kh.getTenKH(), kh.isGioiTinh() ? "Nam" : "Nu",
                    XDate.toString(kh.getNgaySinh(), "yyyy-MM-dd"), kh.getEmail(), kh.getDiaChi(), kh.getMaNV()});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    void sapXepTheoDaXoa() {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);

        try {
            String keyWord = txtTim.getText();
            List<KhachHang> list = dao.selectIsDelete(keyWord);

            for (KhachHang kh : list) {
                model.addRow(new Object[]{kh.getMaKH(), kh.getTenKH(), kh.isGioiTinh() ? "Nam" : "Nu",
                    XDate.toString(kh.getNgaySinh(), "yyyy-MM-dd"), kh.getEmail(), kh.getDiaChi(), kh.getMaNV()});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    void setForm(KhachHang nv) {
        txtMaKH.setText(nv.getMaKH());
        txtTenKH.setText(nv.getTenKH());
        txtEmail.setText(nv.getEmail());
        txtMaNV.setText(nv.getMaNV());

        txtDiaChi.setText(nv.getDiaChi());
        rdoNam.setSelected(nv.isGioiTinh());
        rdoNu.setSelected(!nv.isGioiTinh());
        if (nv.getNgaySinh() != null) {
            dcsNgaySinh.setDate(XDate.addDays(nv.getNgaySinh(), 2));
        } else {
            dcsNgaySinh.setDate(nv.getNgaySinh());
        }
    }

    KhachHang getForm() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        // Get the current date
        java.sql.Date currentDate = new java.sql.Date(System.currentTimeMillis());

        // Extract and format the date from the chooser
        Date ngaySinh = dcsNgaySinh.getDate();
        java.sql.Date sqlNgaySinh = null;

        if (ngaySinh != null) {
            String formattedNgaySinh = dateFormat.format(ngaySinh);

            try {
                sqlNgaySinh = java.sql.Date.valueOf(formattedNgaySinh);
            } catch (IllegalArgumentException e) {

            }
        }

        KhachHang nv = new KhachHang();
        nv.setMaKH(txtMaKH.getText());
        nv.setTenKH(txtTenKH.getText());
        nv.setNgaySinh(sqlNgaySinh);
        nv.setMaNV(txtMaNV.getText());
        nv.setEmail(txtEmail.getText());
        nv.setDiaChi(txtDiaChi.getText());
        nv.setGioiTinh(rdoNam.isSelected());
        return nv;
    }

    void clearForm() {
        KhachHang nv = new KhachHang();
        nv.setMaNV(Auth.user.getMaNV());
        this.setForm(nv);

        this.row = -1;
        this.updateStatus();
    }

    void edit() {
        String manv = (String) tblKhachHang.getValueAt(this.row, 0);
        KhachHang nv = dao.selectById(manv);
        
        if(nv == null){
            MsgBox.alert(this, "Nhan vien da xoa hoac khong ton tai");
            return;
        }
        this.setForm(nv);

        this.updateStatus();
    }

    void insert() {
        List<KhachHang> lstkh = dao.selectAll();

        KhachHang nh = getForm();

        for (KhachHang khachHang : lstkh) {
            if (khachHang.getMaKH().equals(nh.getMaKH())) {
                MsgBox.alert(this, "Da co khach hang tren");
                return;
            }
        }
        try {
            dao.insert(nh);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại!");
        }
    }

    void update() {
        List<KhachHang> lstkh = dao.selectAll();
        KhachHang nh = getForm();

        boolean check = false;
        for (KhachHang khachHang : lstkh) {
            if (khachHang.getMaKH().equals(nh.getMaKH())) {
                check = true;
                break;
            }
        }
        if (check == false) {
            MsgBox.alert(this, "Khong co khach hang tren");
            return;
        }

        try {
            dao.update(nh);
            this.fillTable();

            MsgBox.alert(this, "Cập nhật thành công");
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Cập nhật thất bại");
        }
    }

    void delete() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa ");
        } else {
            String makh = txtMaKH.getText();

            if (MsgBox.comfirm(this, "Bạn muốn xóa khach hang " + makh + " này chứ ? ")) {
                try {
                    KhachHang kh = dao.selectById(makh);
                    kh.setIsdelete(true);
                    dao.update(kh);
                    this.fillTable();
                    this.clearForm();
                    MsgBox.alert(this, "Xóa thành công ");
                } catch (Exception e) {
                    MsgBox.alert(this, "Xóa thất bại ");
                }
            }
        }
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void next() {
        if (this.row < tblKhachHang.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void last() {
        this.row = tblKhachHang.getRowCount() - 1;
        this.edit();
    }

    void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblKhachHang.getRowCount() - 1);

        // trang thai form
        txtMaKH.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);

        //thanh dieu huong
    }

    private static void customizeButton(JButton button) {
        button.setPreferredSize(new Dimension(88, 31));
        button.setBackground(new Color(0, 150, 136));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);

        button.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Xử lý khi click vào button
            }

            @Override
            public void mousePressed(MouseEvent e) {
                // Xử lý khi nhấn chuột
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // Xử lý khi thả chuột
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(new Color(244, 67, 54));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(new Color(0, 150, 136));
            }
        });
    }

    private static void customizeTextField(JTextField textField, Color backgroundColor) {
        textField.setPreferredSize(new Dimension(55, 20));
        textField.setBackground(backgroundColor);
        textField.setForeground(Color.BLACK);

        // Border
        Border line = new LineBorder(Color.BLACK); // Đường viền đen
        Border margin = new EmptyBorder(0, 10, 0, 10); // Khoảng trống giữa viền và văn bản
        Border compound = new CompoundBorder(line, margin); // Kết hợp đường viền và khoảng trống
        textField.setBorder(compound);

        // Để làm cho text hiển thị tốt hơn trên nền màu
        textField.setCaretColor(Color.BLACK); // Màu con trỏ (caret) là màu đen
        textField.setSelectionColor(Color.GRAY); // Màu khi chọn văn bản là màu xám

        textField.setFont(new Font("Arial", Font.PLAIN, 14));

        // Hiệu ứng focus
        textField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                textField.setBorder(new LineBorder(Color.BLUE)); // Đổi màu border khi focus
            }

            @Override
            public void focusLost(FocusEvent e) {
                textField.setBorder(compound); // Trở lại màu border ban đầu khi không focus
            }
        });
    }

    boolean isValided() {
        if (txtMaKH.getText().isBlank() || txtMaNV.getText().isBlank() || txtEmail.getText().isBlank() || txtTenKH.getText().isBlank() || txtDiaChi.getText().isBlank() || dcsNgaySinh.getDate() == null) {
            return false;
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cboSapXep;
    private com.toedter.calendar.JDateChooser dcsNgaySinh;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
